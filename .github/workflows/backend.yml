name: Backend

on:
  push:
    branches: [ master ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm ci
    - run: git submodule update --init --recursive
    - run: npm run build
      env:
        ETHEREUM_RPC: ETHEREUM_RPC
        POLYGON_RPC: POLYGON_RPC
        BSC_RPC: BSC_RPC
        FANTOM_RPC: FANTOM_RPC
        ARBITRUM_RPC: ARBITRUM_RPC
        OPTIMISM_RPC: OPTIMISM_RPC
        XDAI_RPC: XDAI_RPC
        HARMONY_RPC: HARMONY_RPC
        OUTDATED_WEBHOOK: OUTDATED_WEBHOOK
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm ci
    - run: git submodule update --init --recursive
    - run: cd DefiLlama-Adapters && git checkout main && git pull
    - name: Deploy infrastructure stack
      run: npm run deploy:prod
      env:
        ETHEREUM_RPC: ${{ secrets.ETHEREUM_RPC }}
        POLYGON_RPC: ${{ secrets.POLYGON_RPC }}
        BSC_RPC: ${{ secrets.BSC_RPC }}
        FANTOM_RPC: ${{ secrets.FANTOM_RPC }}
        ARBITRUM_RPC: ${{ secrets.ARBITRUM_RPC }}
        OPTIMISM_RPC: ${{ secrets.OPTIMISM_RPC }}
        XDAI_RPC: ${{ secrets.XDAI_RPC }}
        HARMONY_RPC: ${{ secrets.HARMONY_RPC }}
        OUTDATED_WEBHOOK: ${{ secrets.OUTDATED_WEBHOOK }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
